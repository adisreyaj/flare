type Query {
  users: [User]
  user(id: ID!): User
  me: User
}

type Mutation {
  createUser(input: CreateUserInput): User
  updateUser(input: UpdateUserInput): User
  deleteUser(id: ID!): User
  follow(userId: ID!): User
  unfollow(userId: ID!): User
}

type User {
  id: String!
  image: String
  firstName: String!
  lastName: String!
  email: String!
  username: String!
  password: String
  bio: UserBio
  followers: [User]
  following: [User]
}

type UserBio {
  id: String!
  description: String
  github: String
  twitter: String
  linkedin: String
  facebook: String
  hashnode: String
  devto: String
}

input UserBioInput {
  id: String
  description: String
  github: String
  twitter: String
  linkedin: String
  facebook: String
  hashnode: String
  devto: String
}

input CreateUserInput {
  firstName: String!
  image: String
  lastName: String!
  email: String!
  password: String!
  bio: UserBioInput
}

input UpdateUserInput {
  id: String!
  image: String
  firstName: String
  lastName: String
  password: String
  bio: UserBioInput
}
